# Generated by Django 2.0.4 on 2018-04-27 00:19

from django.db import migrations, models
import django.db.models.deletion
import os

def forwards_func(apps, schema_editor):
    SysSettingInfo = apps.get_model("NetMngApp", "SysSettingInfo")
    db_alias = schema_editor.connection.alias
    SysSettingInfo.objects.using(db_alias).update_or_create(settingitem="pingrefresh",
                                                            defaults={"settingitem": "pingrefresh",
                                                                      "settingvalue": "30"})
    SysSettingInfo.objects.using(db_alias).update_or_create(settingitem="pingtimeout",
                                                            defaults={"settingitem": "pingtimeout",
                                                                      "settingvalue": "2"})
    SysSettingInfo.objects.using(db_alias).update_or_create(settingitem="pingcount",
                                                            defaults={"settingitem": "pingcount",
                                                                      "settingvalue": "1"})
    SysSettingInfo.objects.using(db_alias).update_or_create(settingitem="SNMPport",
                                                            defaults={"settingitem": "SNMPport",
                                                                      "settingvalue": "161"})
    SysSettingInfo.objects.using(db_alias).update_or_create(settingitem="devinforefresh",
                                                            defaults={"settingitem": "devinforefresh",
                                                                      "settingvalue": "1"})

    # SysSettingInfo.objects.using(db_alias).bulk_create([
    #     SysSettingInfo(settingitem = "pingrefresh", settingvalue = "30"),
    #     SysSettingInfo(settingitem="allrefresh", settingvalue="1"),
    # ])


def reverse_func(apps, schema_editor):
    SysSettingInfo = apps.get_model("NetMngApp", "SysSettingInfo")
    db_alias = schema_editor.connection.alias
    SysSettingInfo.objects.using(db_alias).filter(settingitem="pingrefresh").delete()
    SysSettingInfo.objects.using(db_alias).filter(settingitem="allrefresh").delete()

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DevARPMACTableInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ARPTable', models.CharField(max_length=2048)),
                ('MACTable', models.CharField(max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='DevInfoVerbose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updateTime', models.CharField(max_length=64)),
                ('sysDescr', models.CharField(max_length=1024)),
                ('errorInfo', models.CharField(max_length=1024)),
                ('IP', models.CharField(max_length=32)),
                ('sysUptime', models.CharField(max_length=128)),
                ('sysContact', models.CharField(max_length=512)),
                ('sysName', models.CharField(max_length=128)),
                ('sysLocation', models.CharField(max_length=512)),
                ('hardwareVersion', models.CharField(max_length=512)),
                ('softwareVersion', models.CharField(max_length=512)),
                ('serialNumber', models.CharField(max_length=128)),
                ('CPUUsage', models.CharField(max_length=32)),
                ('CPUUsageUpper', models.CharField(max_length=32)),
                ('memoryUsage', models.CharField(max_length=32)),
                ('memoryUsageUpper', models.CharField(max_length=32)),
                ('memorySize', models.CharField(max_length=128)),
                ('CPUTemprature', models.CharField(max_length=32)),
                ('CPUTempratureUpper', models.CharField(max_length=32)),
                ('CPUTempratureLower', models.CharField(max_length=32)),
                ('MAC', models.CharField(max_length=32)),
                ('UpLinkPort', models.CharField(max_length=32)),
                ('destIP', models.CharField(max_length=32)),
                ('destPort', models.CharField(max_length=32)),
                ('destFlag', models.IntegerField()),
                ('gateaddress', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='DevPingInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connected', models.BooleanField()),
                ('delaytime', models.CharField(max_length=64)),
                ('DEV', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NetMngApp.DevInfoVerbose')),
            ],
        ),
        migrations.CreateModel(
            name='Netsets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('netaddress', models.CharField(max_length=16)),
                ('netmask', models.CharField(max_length=16)),
                ('gateaddress', models.CharField(max_length=16)),
                ('community', models.CharField(max_length=256)),
                ('ipcounts', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SysSettingInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settingitem', models.CharField(max_length=128)),
                ('settingvalue', models.CharField(max_length=32)),
            ],
        ),
        migrations.AddField(
            model_name='devarpmactableinfo',
            name='DEV',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NetMngApp.DevInfoVerbose'),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
